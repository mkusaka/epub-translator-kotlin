on:
  push:
    tags:
      - '*'

name: Create Release

permissions:
  packages: write
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build uber-jar with Gradle
        run: ./gradlew quarkusBuild -Dquarkus.package.type=uber-jar

#      - name: Build native image
#        run: ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload release uber-jar asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/epub-translator-runner.jar
          asset_name: epub-translator-runner.jar
          asset_content_type: application/java-archive

      - name: build & push to GitHub Container Registry
        run: |
          TAG="ghcr.io/${{ github.repository }}:$(date -u '+%Y%m%d%H%M%S')"
          docker build -f src/main/docker/Dockerfile.jvm -t  "${TAG}" .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u "${{ github.actor }}" --password-stdin ghcr.io
          docker push "${TAG}"
        env:
          DOCKER_BUILDKIT: 1

#      - name: Upload release executable asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./build/epub-translator-runner
#          asset_name: epub-translator-runner
#          asset_content_type: application/octet-stream
